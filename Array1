ðŸ§  What Is an Array in Java?
An array is a data structure that stores multiple values of the same type in a contiguous memory location. It allows indexed access to elements and is useful for storing collections like marks, names, or objects.

ðŸ“Œ Key Concepts
1. Declaration
Declaring an array means telling the compiler that you'll use an array of a specific type.
int[] numbers;       // Preferred syntax
String names[];      // Also valid


2. Definition & Creation
Defining and creating an array involves allocating memory using new.
numbers = new int[5];        // Creates an array of 5 integers
names = new String[3];       // Creates an array of 3 strings


You can also combine declaration and creation:
int[] numbers = new int[5];
String[] names = new String[3];


3. Initialization
You can assign values directly:
int[] numbers = {10, 20, 30, 40, 50};
String[] names = {"Aditi", "Riya", "Neha"};



ðŸ“Š Types of Arrays
âœ… Single-Dimensional Array
Stores elements in a linear form.
int[] marks = new int[4];
marks[0] = 85;
marks[1] = 90;
marks[2] = 78;
marks[3] = 88;


âœ… Multi-Dimensional Array
Usually a 2D array (like a matrix), but Java supports more dimensions.
int[][] matrix = new int[2][3];  // 2 rows, 3 columns

matrix[0][0] = 1;
matrix[0][1] = 2;
matrix[0][2] = 3;
matrix[1][0] = 4;
matrix[1][1] = 5;
matrix[1][2] = 6;


You can also initialize directly:
int[][] matrix = {
    {1, 2, 3},
    {4, 5, 6}
};



ðŸ§ª Dry Run Example
int[] arr = {5, 10, 15};
System.out.println(arr[1]);  // Output: 10




âœ… 1. Single-Dimensional Array: Sum of Elements
public class ArraySum {
    public static void main(String[] args) {
        int[] numbers = {10, 20, 30, 40, 50};
        int sum = 0;

        for (int num : numbers) {
            sum += num;
        }

        System.out.println("Sum of array elements: " + sum);
    }
}


ðŸ§ª Sample Output:
Sum of array elements: 150



âœ… 2. Multi-Dimensional Array: Matrix Addition
public class MatrixAddition {
    public static void main(String[] args) {
        int[][] A = {
            {1, 2},
            {3, 4}
        };
        int[][] B = {
            {5, 6},
            {7, 8}
        };
        int[][] C = new int[2][2];

        for (int i = 0; i < 2; i++) {
            for (int j = 0; j < 2; j++) {
                C[i][j] = A[i][j] + B[i][j];
            }
        }

        System.out.println("Resultant Matrix:");
        for (int[] row : C) {
            for (int val : row) {
                System.out.print(val + " ");
            }
            System.out.println();
        }
    }
}


ðŸ§ª Sample Output:
Resultant Matrix:
6 8
10 12



âœ… 3. Array Search: Linear Search
import java.util.Scanner;

public class LinearSearch {
    public static void main(String[] args) {
        int[] arr = {12, 45, 67, 23, 89};
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter element to search: ");
        int key = sc.nextInt();
        boolean found = false;

        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == key) {
                System.out.println("Element found at index: " + i);
                found = true;
                break;
            }
        }

        if (!found) {
            System.out.println("Element not found.");
        }
    }
}


ðŸ§ª Sample Input/Output:
Enter element to search: 67
Element found at index: 2




